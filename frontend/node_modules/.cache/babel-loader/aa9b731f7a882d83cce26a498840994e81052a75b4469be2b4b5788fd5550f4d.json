{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../App.css';import{useNavigate}from'react-router-dom';import TextAppear from'./TextAppear';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";function TermIntro(){const[currentDate,setCurrentDate]=useState(new Date());const[expandHome,setExpandHome]=useState(false);const[showTerminal,setShowTerminal]=useState(true);// Keep terminal visible across routes\nconst navigate=useNavigate();const[isMobile,setIsMobile]=useState(false);//creating IP state\nconst[ip,setIP]=useState(\"\");//function to get IP address\n//using axios to get the IP address\nconst getData=async()=>{const res=await axios.get(\"https://api.ipify.org/?format=json\");console.log(res.data);setIP(res.data.ip);};//using useEffect to call the function when the component mounts\nuseEffect(()=>{//passing getData method to the lifecycle method\ngetData();},[]);useEffect(()=>{setCurrentDate(new Date());},[]);const login='Last login: '+currentDate.toDateString()+' '+currentDate.toLocaleTimeString()+' on ttys011';const message='ssh atharva@data\\n';const mobileMessage='ssh -q atharva@data\\n';const output='*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n'+'-                       Password-only logins have been disabled                      *\\n'+'*         Use of Duo Mobile, a hardware token, or an SSH key pair now required       -\\n'+'-        Duo Mobile: Enter your password followed by a comma followed by PUSH        *\\n'+'*        Token: Enter your password followed by a comma followed by 6-digit code     -\\n'+'*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n';const output2Date=new Date(currentDate.getTime()+5000);const output2='Last login: '+output2Date.toDateString()+' '+output2Date.toLocaleTimeString()+' from ';const message2='cd ~/atharva/menu';const message3='ls -la';const output3='-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:31 (8) Home.html\\n'+'-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:32 (8) Projects.html\\n'+'-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:33 (8) 182.html\\n';const message4='echo -e \\\"\\\\033[2J\\\\033[H\\\"';const finalmsgopen='open Home.html';const desktopCommands=[{message:login,type:'instant'},{message:message,type:'typewriter'},{message:output,type:'instant'},{message:output2+ip,type:'instant'},{message:message2,type:'typewriter'},{message:message3,type:'typewriter'},{message:output3,type:'instant'},{message:message4,type:'typewriter'},{message:message4,type:'clear'},{message:finalmsgopen,type:'typewriter'},{message:finalmsgopen,type:'clear'}];const mobileCommands=[{message:login,type:'instant'},{message:mobileMessage,type:'typewriter'},{message:output2+ip,type:'instant'},{message:message2,type:'typewriter'},{message:message3,type:'typewriter'},{message:output3,type:'instant'},{message:message4,type:'typewriter'},{message:message4,type:'clear'},{message:finalmsgopen,type:'typewriter'},{message:finalmsgopen,type:'clear'}];const commands=isMobile?mobileCommands:desktopCommands;useEffect(()=>{if(expandHome){console.log('Terminal is expanding...');}},[expandHome]);// Detect screen size\nuseEffect(()=>{const handleResize=()=>{setIsMobile(window.innerWidth<=768);// Consider screens <= 768px as mobile\n};handleResize();// Initial check\nwindow.addEventListener('resize',handleResize);// Listen for resize events\nreturn()=>{window.removeEventListener('resize',handleResize);// Cleanup listener\n};},[]);const handleComplete=()=>{console.log('Expanding terminal...');setExpandHome(true);setTimeout(()=>{console.log('Navigating to /home');setShowTerminal(false);navigate('/home');},500);};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:showTerminal&&/*#__PURE__*/_jsx(TextAppear,{commands:commands,onComplete:handleComplete// Navigate after text animation completes\n})});}export default TermIntro;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TextAppear","axios","jsx","_jsx","TermIntro","currentDate","setCurrentDate","Date","expandHome","setExpandHome","showTerminal","setShowTerminal","navigate","isMobile","setIsMobile","ip","setIP","getData","res","get","console","log","data","login","toDateString","toLocaleTimeString","message","mobileMessage","output","output2Date","getTime","output2","message2","message3","output3","message4","finalmsgopen","desktopCommands","type","mobileCommands","commands","handleResize","window","innerWidth","addEventListener","removeEventListener","handleComplete","setTimeout","className","children","onComplete"],"sources":["/Users/atharvakerkar/Documents/Summer Project/top/frontend/src/components/TermIntro.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport TextAppear from './TextAppear';\nimport axios from \"axios\";\n\n\nfunction TermIntro() {\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [expandHome, setExpandHome] = useState(false);\n    const [showTerminal, setShowTerminal] = useState(true); // Keep terminal visible across routes\n    const navigate = useNavigate();\n    const [isMobile, setIsMobile] = useState(false);\n    //creating IP state\n    const [ip, setIP] = useState(\"\");\n    //function to get IP address\n    //using axios to get the IP address\n    const getData = async () => {\n      const res = await axios.get(\"https://api.ipify.org/?format=json\");\n      console.log(res.data);\n      setIP(res.data.ip);\n    };\n\n    //using useEffect to call the function when the component mounts\n    useEffect(() => {\n      //passing getData method to the lifecycle method\n      getData();\n    }, []);\n\n    useEffect(() => {\n        setCurrentDate(new Date());\n    }, []);\n\n    const login = 'Last login: ' + currentDate.toDateString() + ' ' + currentDate.toLocaleTimeString() + ' on ttys011';\n    const message = 'ssh atharva@data\\n';\n    const mobileMessage = 'ssh -q atharva@data\\n';\n    const output = '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n' +\n        '-                       Password-only logins have been disabled                      *\\n' +\n        '*         Use of Duo Mobile, a hardware token, or an SSH key pair now required       -\\n' +\n        '-        Duo Mobile: Enter your password followed by a comma followed by PUSH        *\\n' +\n        '*        Token: Enter your password followed by a comma followed by 6-digit code     -\\n' +\n        '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n';\n    const output2Date = new Date(currentDate.getTime() + 5000);\n    const output2 = 'Last login: ' + output2Date.toDateString() + ' ' + output2Date.toLocaleTimeString() + ' from ';\n    const message2 = 'cd ~/atharva/menu';\n    const message3 = 'ls -la';\n    const output3 = '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:31 (8) Home.html\\n' +\n        '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:32 (8) Projects.html\\n' +\n        '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:33 (8) 182.html\\n';\n    const message4 = 'echo -e \\\"\\\\033[2J\\\\033[H\\\"';\n    const finalmsgopen = 'open Home.html';\n\n    const desktopCommands = [\n        { message: login, type: 'instant' },\n        { message: message, type: 'typewriter' },\n        { message: output, type: 'instant' },\n        { message: output2 + ip, type: 'instant' },\n        { message: message2, type: 'typewriter' },\n        { message: message3, type: 'typewriter' },\n        { message: output3, type: 'instant' },\n        { message: message4, type: 'typewriter' },\n        { message: message4, type: 'clear' },\n        { message: finalmsgopen, type: 'typewriter' },\n        { message: finalmsgopen, type: 'clear' }\n    ];\n\n    const mobileCommands = [\n        { message: login, type: 'instant' },\n        { message: mobileMessage, type: 'typewriter' },\n        { message: output2 + ip, type: 'instant' },\n        { message: message2, type: 'typewriter' },\n        { message: message3, type: 'typewriter' },\n        { message: output3, type: 'instant' },\n        { message: message4, type: 'typewriter' },\n        { message: message4, type: 'clear' },\n        { message: finalmsgopen, type: 'typewriter' },\n        { message: finalmsgopen, type: 'clear' }\n    ];\n\n    const commands = isMobile ? mobileCommands : desktopCommands;\n\n\n    useEffect(() => {\n        if (expandHome) {\n            console.log('Terminal is expanding...');\n        }\n    }, [expandHome]);\n    \n\n    // Detect screen size\n    useEffect(() => {\n        const handleResize = () => {\n            setIsMobile(window.innerWidth <= 768); // Consider screens <= 768px as mobile\n        };\n    \n        handleResize(); // Initial check\n        window.addEventListener('resize', handleResize); // Listen for resize events\n    \n        return () => {\n            window.removeEventListener('resize', handleResize); // Cleanup listener\n        };\n    }, []);\n\n    const handleComplete = () => {\n        console.log('Expanding terminal...');\n        setExpandHome(true);\n        setTimeout(() => {\n            console.log('Navigating to /home');\n            setShowTerminal(false);\n            navigate('/home');\n        }, 500);\n    };\n    \n\n    return (\n            <div className=\"container\">\n                {/* Terminal Wrapper */}\n                {showTerminal && (\n                        <TextAppear\n                            commands={commands}\n                            onComplete={handleComplete} // Navigate after text animation completes\n                        />\n                )}\n            </div>\n    );\n}\n\nexport default TermIntro;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}