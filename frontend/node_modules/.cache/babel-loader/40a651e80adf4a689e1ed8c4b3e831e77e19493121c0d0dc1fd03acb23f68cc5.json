{"ast":null,"code":"var _jsxFileName = \"/Users/atharvakerkar/Documents/Summer Project/top/frontend/src/components/CircularIcons.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './CircularIcons.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircleAnimation = ({\n  numIcons = 5,\n  size = 200,\n  iconSize = 40,\n  images,\n  centerIcon\n}) => {\n  _s();\n  const radius = size / 2;\n  const center = radius;\n  const [positions, setPositions] = useState([]);\n  const [angle, setAngle] = useState(0); // For rotating surrounding icons\n  const [centerAngle, setCenterAngle] = useState(0); // For rotating the center icon\n\n  useEffect(() => {\n    const updatePositions = () => {\n      const newPositions = [];\n      for (let i = 0; i < numIcons; i++) {\n        const angleDeg = i * 360 / numIcons + angle;\n        const angleRad = angleDeg * Math.PI / 180;\n        const x = radius * Math.cos(angleRad) + center - iconSize / 2;\n        const y = radius * Math.sin(angleRad) + center - iconSize / 2;\n        newPositions.push({\n          x,\n          y\n        });\n      }\n      setPositions(newPositions);\n    };\n    const interval = setInterval(() => {\n      setAngle(prevAngle => (prevAngle + 0.25) % 360); // Clockwise rotation for surrounding icons\n    }, 20);\n    updatePositions();\n    return () => clearInterval(interval);\n  }, [angle, numIcons, size, radius, center, iconSize]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCenterAngle(prevAngle => (prevAngle - 0.25) % 360); // Counterclockwise rotation for the center icon\n    }, 20);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circle-container\",\n    style: {\n      width: size,\n      height: size\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-icon\",\n      style: {\n        width: Math.max(size - 10, iconSize),\n        height: Math.max(size - 10, iconSize),\n        transform: `translate(-50%, -50%) rotate(${centerAngle}deg)`\n      },\n      children: centerIcon && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: centerIcon,\n        alt: \"center-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), positions.map((position, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rotating-icon\",\n      style: {\n        width: iconSize,\n        height: iconSize,\n        left: position.x,\n        top: position.y\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[index],\n        alt: `icon-${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CircleAnimation, \"pg6q483HOqVKLyDZ6eeu1YV2ufo=\");\n_c = CircleAnimation;\nexport default CircleAnimation;\nvar _c;\n$RefreshReg$(_c, \"CircleAnimation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CircleAnimation","numIcons","size","iconSize","images","centerIcon","_s","radius","center","positions","setPositions","angle","setAngle","centerAngle","setCenterAngle","updatePositions","newPositions","i","angleDeg","angleRad","Math","PI","x","cos","y","sin","push","interval","setInterval","prevAngle","clearInterval","className","style","width","height","children","max","transform","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","position","index","left","top","_c","$RefreshReg$"],"sources":["/Users/atharvakerkar/Documents/Summer Project/top/frontend/src/components/CircularIcons.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './CircularIcons.css'; // Import the CSS file\n\nconst CircleAnimation = ({ numIcons = 5, size = 200, iconSize = 40, images, centerIcon }) => {\n  const radius = size / 2;\n  const center = radius;\n\n  const [positions, setPositions] = useState([]);\n  const [angle, setAngle] = useState(0); // For rotating surrounding icons\n  const [centerAngle, setCenterAngle] = useState(0); // For rotating the center icon\n\n  useEffect(() => {\n    const updatePositions = () => {\n      const newPositions = [];\n      for (let i = 0; i < numIcons; i++) {\n        const angleDeg = (i * 360) / numIcons + angle;\n        const angleRad = (angleDeg * Math.PI) / 180;\n\n        const x = radius * Math.cos(angleRad) + center - iconSize / 2;\n        const y = radius * Math.sin(angleRad) + center - iconSize / 2;\n\n        newPositions.push({ x, y });\n      }\n      setPositions(newPositions);\n    };\n\n    const interval = setInterval(() => {\n      setAngle((prevAngle) => (prevAngle + 0.25) % 360); // Clockwise rotation for surrounding icons\n    }, 20);\n\n    updatePositions();\n\n    return () => clearInterval(interval);\n  }, [angle, numIcons, size, radius, center, iconSize]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCenterAngle((prevAngle) => (prevAngle - 0.25) % 360); // Counterclockwise rotation for the center icon\n    }, 20);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div\n      className=\"circle-container\"\n      style={{\n        width: size,\n        height: size,\n      }}\n    >\n      {/* Center Icon rotating counterclockwise */}\n      <div\n        className=\"center-icon\"\n        style={{\n          width: Math.max(size - 10, iconSize),\n          height: Math.max(size - 10, iconSize),\n          transform: `translate(-50%, -50%) rotate(${centerAngle}deg)`,\n        }}\n      >\n        {centerIcon && <img src={centerIcon} alt=\"center-icon\" />}\n      </div>\n\n      {/* Rotating Icons with Hover Animation */}\n      {positions.map((position, index) => (\n        <div\n          key={index}\n          className=\"rotating-icon\"\n          style={{\n            width: iconSize,\n            height: iconSize,\n            left: position.x,\n            top: position.y,\n          }}\n        >\n          <img src={images[index]} alt={`icon-${index}`} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CircleAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}