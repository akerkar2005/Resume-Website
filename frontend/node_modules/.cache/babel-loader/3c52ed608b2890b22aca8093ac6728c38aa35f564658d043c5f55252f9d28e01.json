{"ast":null,"code":"var _jsxFileName = \"/Users/atharvakerkar/Documents/Summer Project/top/frontend/src/components/TermIntro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport TextAppear from './TextAppear';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TermIntro() {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [expandHome, setExpandHome] = useState(false);\n  const [showTerminal, setShowTerminal] = useState(true); // Keep terminal visible across routes\n  const navigate = useNavigate();\n  const [isMobile, setIsMobile] = useState(false);\n  //creating IP state\n  const [ip, setIP] = useState(\"\");\n  //function to get IP address\n  //using axios to get the IP address\n  const getData = async () => {\n    const res = await axios.get(\"https://api.ipify.org/?format=json\");\n    console.log(res.data);\n    setIP(res.data.ip);\n  };\n\n  //using useEffect to call the function when the component mounts\n  useEffect(() => {\n    //passing getData method to the lifecycle method\n    getData();\n  }, []);\n  useEffect(() => {\n    setCurrentDate(new Date());\n  }, []);\n  const login = 'Last login: ' + currentDate.toDateString() + ' ' + currentDate.toLocaleTimeString() + ' on ttys011';\n  const message = 'ssh atharva@data\\n';\n  const mobileMessage = 'ssh -q atharva@data\\n';\n  const output = '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n' + '-                       Password-only logins have been disabled                      *\\n' + '*         Use of Duo Mobile, a hardware token, or an SSH key pair now required       -\\n' + '-        Duo Mobile: Enter your password followed by a comma followed by PUSH        *\\n' + '*        Token: Enter your password followed by a comma followed by 6-digit code     -\\n' + '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n';\n  const output2Date = new Date(currentDate.getTime() + 5000);\n  const output2 = 'Last login: ' + output2Date.toDateString() + ' ' + output2Date.toLocaleTimeString() + ' from ';\n  const message2 = 'cd ~/atharva/menu';\n  const message3 = 'ls -la';\n  const output3 = '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:31 (8) Home.html\\n' + '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:32 (8) Projects.html\\n' + '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:33 (8) 182.html\\n';\n  const message4 = 'echo -e \\\"\\\\033[2J\\\\033[H\\\"';\n  const finalmsgopen = 'open Home.html';\n  const desktopCommands = [{\n    message: login,\n    type: 'instant'\n  }, {\n    message: message,\n    type: 'typewriter'\n  }, {\n    message: output,\n    type: 'instant'\n  }, {\n    message: output2 + ip,\n    type: 'instant'\n  }, {\n    message: message2,\n    type: 'typewriter'\n  }, {\n    message: message3,\n    type: 'typewriter'\n  }, {\n    message: output3,\n    type: 'instant'\n  }, {\n    message: message4,\n    type: 'typewriter'\n  }, {\n    message: message4,\n    type: 'clear'\n  }, {\n    message: finalmsgopen,\n    type: 'typewriter'\n  }, {\n    message: finalmsgopen,\n    type: 'clear'\n  }];\n  const mobileCommands = [{\n    message: login,\n    type: 'instant'\n  }, {\n    message: mobileMessage,\n    type: 'typewriter'\n  }, {\n    message: output2 + ip,\n    type: 'instant'\n  }, {\n    message: message2,\n    type: 'typewriter'\n  }, {\n    message: message3,\n    type: 'typewriter'\n  }, {\n    message: output3,\n    type: 'instant'\n  }, {\n    message: message4,\n    type: 'typewriter'\n  }, {\n    message: message4,\n    type: 'clear'\n  }, {\n    message: finalmsgopen,\n    type: 'typewriter'\n  }, {\n    message: finalmsgopen,\n    type: 'clear'\n  }];\n  const commands = isMobile ? mobileCommands : desktopCommands;\n  useEffect(() => {\n    if (expandHome) {\n      console.log('Terminal is expanding...');\n    }\n  }, [expandHome]);\n\n  // Detect screen size\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768); // Consider screens <= 768px as mobile\n    };\n    handleResize(); // Initial check\n    window.addEventListener('resize', handleResize); // Listen for resize events\n\n    return () => {\n      window.removeEventListener('resize', handleResize); // Cleanup listener\n    };\n  }, []);\n  const handleComplete = () => {\n    console.log('Expanding terminal...');\n    setExpandHome(true);\n    setTimeout(() => {\n      console.log('Navigating to /home');\n      setShowTerminal(false);\n      navigate('/home');\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: showTerminal && /*#__PURE__*/_jsxDEV(TextAppear, {\n      commands: commands,\n      onComplete: handleComplete // Navigate after text animation completes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 13\n  }, this);\n}\n_s(TermIntro, \"yDr4LDshVDloQNBLmmWG3QDEmD0=\", false, function () {\n  return [useNavigate];\n});\n_c = TermIntro;\nexport default TermIntro;\nvar _c;\n$RefreshReg$(_c, \"TermIntro\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TextAppear","axios","jsxDEV","_jsxDEV","TermIntro","_s","currentDate","setCurrentDate","Date","expandHome","setExpandHome","showTerminal","setShowTerminal","navigate","isMobile","setIsMobile","ip","setIP","getData","res","get","console","log","data","login","toDateString","toLocaleTimeString","message","mobileMessage","output","output2Date","getTime","output2","message2","message3","output3","message4","finalmsgopen","desktopCommands","type","mobileCommands","commands","handleResize","window","innerWidth","addEventListener","removeEventListener","handleComplete","setTimeout","className","children","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/atharvakerkar/Documents/Summer Project/top/frontend/src/components/TermIntro.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport TextAppear from './TextAppear';\nimport axios from \"axios\";\n\n\nfunction TermIntro() {\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [expandHome, setExpandHome] = useState(false);\n    const [showTerminal, setShowTerminal] = useState(true); // Keep terminal visible across routes\n    const navigate = useNavigate();\n    const [isMobile, setIsMobile] = useState(false);\n    //creating IP state\n    const [ip, setIP] = useState(\"\");\n    //function to get IP address\n    //using axios to get the IP address\n    const getData = async () => {\n      const res = await axios.get(\"https://api.ipify.org/?format=json\");\n      console.log(res.data);\n      setIP(res.data.ip);\n    };\n\n    //using useEffect to call the function when the component mounts\n    useEffect(() => {\n      //passing getData method to the lifecycle method\n      getData();\n    }, []);\n\n    useEffect(() => {\n        setCurrentDate(new Date());\n    }, []);\n\n    const login = 'Last login: ' + currentDate.toDateString() + ' ' + currentDate.toLocaleTimeString() + ' on ttys011';\n    const message = 'ssh atharva@data\\n';\n    const mobileMessage = 'ssh -q atharva@data\\n';\n    const output = '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n' +\n        '-                       Password-only logins have been disabled                      *\\n' +\n        '*         Use of Duo Mobile, a hardware token, or an SSH key pair now required       -\\n' +\n        '-        Duo Mobile: Enter your password followed by a comma followed by PUSH        *\\n' +\n        '*        Token: Enter your password followed by a comma followed by 6-digit code     -\\n' +\n        '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n';\n    const output2Date = new Date(currentDate.getTime() + 5000);\n    const output2 = 'Last login: ' + output2Date.toDateString() + ' ' + output2Date.toLocaleTimeString() + ' from ';\n    const message2 = 'cd ~/atharva/menu';\n    const message3 = 'ls -la';\n    const output3 = '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:31 (8) Home.html\\n' +\n        '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:32 (8) Projects.html\\n' +\n        '-rw-r--r--@   1 atharva  staff     2307497 Nov 14 22:33 (8) 182.html\\n';\n    const message4 = 'echo -e \\\"\\\\033[2J\\\\033[H\\\"';\n    const finalmsgopen = 'open Home.html';\n\n    const desktopCommands = [\n        { message: login, type: 'instant' },\n        { message: message, type: 'typewriter' },\n        { message: output, type: 'instant' },\n        { message: output2 + ip, type: 'instant' },\n        { message: message2, type: 'typewriter' },\n        { message: message3, type: 'typewriter' },\n        { message: output3, type: 'instant' },\n        { message: message4, type: 'typewriter' },\n        { message: message4, type: 'clear' },\n        { message: finalmsgopen, type: 'typewriter' },\n        { message: finalmsgopen, type: 'clear' }\n    ];\n\n    const mobileCommands = [\n        { message: login, type: 'instant' },\n        { message: mobileMessage, type: 'typewriter' },\n        { message: output2 + ip, type: 'instant' },\n        { message: message2, type: 'typewriter' },\n        { message: message3, type: 'typewriter' },\n        { message: output3, type: 'instant' },\n        { message: message4, type: 'typewriter' },\n        { message: message4, type: 'clear' },\n        { message: finalmsgopen, type: 'typewriter' },\n        { message: finalmsgopen, type: 'clear' }\n    ];\n\n    const commands = isMobile ? mobileCommands : desktopCommands;\n\n\n    useEffect(() => {\n        if (expandHome) {\n            console.log('Terminal is expanding...');\n        }\n    }, [expandHome]);\n    \n\n    // Detect screen size\n    useEffect(() => {\n        const handleResize = () => {\n            setIsMobile(window.innerWidth <= 768); // Consider screens <= 768px as mobile\n        };\n    \n        handleResize(); // Initial check\n        window.addEventListener('resize', handleResize); // Listen for resize events\n    \n        return () => {\n            window.removeEventListener('resize', handleResize); // Cleanup listener\n        };\n    }, []);\n\n    const handleComplete = () => {\n        console.log('Expanding terminal...');\n        setExpandHome(true);\n        setTimeout(() => {\n            console.log('Navigating to /home');\n            setShowTerminal(false);\n            navigate('/home');\n        }, 500);\n    };\n    \n\n    return (\n            <div className=\"container\">\n                {/* Terminal Wrapper */}\n                {showTerminal && (\n                        <TextAppear\n                            commands={commands}\n                            onComplete={handleComplete} // Navigate after text animation completes\n                        />\n                )}\n            </div>\n    );\n}\n\nexport default TermIntro;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}